// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iMaxSys.Identity.Data.EFCore;

#nullable disable

namespace iMaxSys.Identity.Migrations
{
    [DbContext(typeof(MaxIdentityContext))]
    [Migration("20211220071814_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("iMaxSys.Data.Entities.App.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Logo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Code");

                    b.ToTable("tenant", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Data.Entities.App.Xpp", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("AccountId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("AppId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("app_id");

                    b.Property<string>("AppKey")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("app_key");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Source")
                        .HasColumnType("int")
                        .HasColumnName("source");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("xpp", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Data.Entities.App.XppSns", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account_id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("AppId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("app_id");

                    b.Property<string>("AppSecret")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("app_secret");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Source")
                        .HasColumnType("int")
                        .HasColumnName("source");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("XppId");

                    b.ToTable("xpp_sns", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.CheckCode", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("BizId")
                        .HasColumnType("bigint")
                        .HasColumnName("biz_id");

                    b.Property<int>("CheckCount")
                        .HasColumnType("int")
                        .HasColumnName("check_count");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("to");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("XppId", "TenantId", "BizId", "MemberId", "To", "Expires", "Status");

                    b.ToTable("check_code", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Descripton")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripton");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("TenantId");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Member", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("AccountSource")
                        .HasColumnType("int")
                        .HasColumnName("account_source");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthday");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("department_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end");

                    b.Property<int>("FailedCount")
                        .HasColumnType("int")
                        .HasColumnName("failed_count");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOfficial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("is_official");

                    b.Property<string>("JoinIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("join_ip");

                    b.Property<DateTime>("JoinTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("join_time");

                    b.Property<string>("LastIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_ip");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("login_name");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mobile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nick_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("salt");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<int>("XppSource")
                        .HasColumnType("int")
                        .HasColumnName("xpp_source");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LoginName");

                    b.HasIndex("Mobile");

                    b.HasIndex("Name");

                    b.HasIndex("TenantId");

                    b.ToTable("member", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.MemberExt", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mobile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nick_name");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("open_id");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("province");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Token")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token");

                    b.Property<long>("XppSnsId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_sns_id");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TenantId");

                    b.HasIndex("XppSnsId", "OpenId")
                        .IsUnique();

                    b.ToTable("member_ext", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.MemberSession", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_official");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nick_name");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("open_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("SessionKey")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("session_key");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token");

                    b.Property<string>("UnionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("union_id");

                    b.Property<long>("XppSnsId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_sns_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("XppSnsId", "MemberId");

                    b.HasIndex("XppSnsId", "Token");

                    b.ToTable("member_session", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Menu", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<int>("Deep")
                        .HasColumnType("int")
                        .HasColumnName("deep");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasColumnName("lv");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("Router")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("router");

                    b.Property<int>("Rv")
                        .HasColumnType("int")
                        .HasColumnName("rv");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "XppId");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Operation", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Descripton")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripton");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint")
                        .HasColumnName("menu_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("Router")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("router");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "XppId");

                    b.ToTable("operation", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Descripton")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripton");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("MenuIds")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("menu_ids");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("OperationIds")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("operation_ids");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.RoleMember", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "MemberId");

                    b.HasIndex("TenantId", "RoleId");

                    b.ToTable("role_member", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Data.Entities.App.XppSns", b =>
                {
                    b.HasOne("iMaxSys.Data.Entities.App.Xpp", "Xpp")
                        .WithMany("XppSns")
                        .HasForeignKey("XppId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Xpp");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Member", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Models.Department", "Department")
                        .WithMany("Members")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.MemberExt", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Models.Member", "Member")
                        .WithMany("MemberExts")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Operation", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Models.Menu", "Menu")
                        .WithMany("Operations")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.RoleMember", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Models.Member", "Member")
                        .WithMany("RoleMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iMaxSys.Identity.Data.Models.Role", "Role")
                        .WithMany("RoleMembers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("iMaxSys.Data.Entities.App.Xpp", b =>
                {
                    b.Navigation("XppSns");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Department", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Member", b =>
                {
                    b.Navigation("MemberExts");

                    b.Navigation("RoleMembers");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Menu", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Models.Role", b =>
                {
                    b.Navigation("RoleMembers");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iMaxSys.Identity.Data.EFCore;

#nullable disable

namespace iMaxSys.Identity.Migrations
{
    [DbContext(typeof(IdentityContext))]
    partial class IdentityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.CheckCode", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("BizId")
                        .HasColumnType("bigint")
                        .HasColumnName("biz_id");

                    b.Property<int>("CheckCount")
                        .HasColumnType("int")
                        .HasColumnName("check_count");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("to");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("XppId", "TenantId", "BizId", "MemberId", "To", "Expires", "Status");

                    b.ToTable("check_code", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Department", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasComment("是否叶节点");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasComment("Code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<string>("Ext")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ext")
                        .HasComment("Ext");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon")
                        .HasComment("icon");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index")
                        .HasComment("索引");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_leaf")
                        .HasComment("是否叶节点");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_root")
                        .HasComment("是否根点");

                    b.Property<bool>("IsShow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_show");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level")
                        .HasComment("深度");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasColumnName("lv")
                        .HasComment("左值");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id")
                        .HasComment("父节点id");

                    b.Property<string>("QuickCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code")
                        .HasComment("QuickCode");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Rv")
                        .HasColumnType("int")
                        .HasColumnName("rv")
                        .HasComment("右值");

                    b.Property<string>("SelectedIcon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("selected_icon")
                        .HasComment("SelectedIcon");

                    b.Property<string>("SelectedStyle")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("selected_style")
                        .HasComment("SelectedStyle");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style")
                        .HasComment("Style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("类型");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("value")
                        .HasComment("值");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "Name");

                    b.HasIndex("TenantId", "QuickCode");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Member", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("AccountSource")
                        .HasColumnType("int")
                        .HasColumnName("account_source")
                        .HasComment("账号来源");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address")
                        .HasComment("地址");

                    b.Property<long>("AreaCode")
                        .HasColumnType("bigint")
                        .HasColumnName("area_code")
                        .HasComment("区域代码from国家统计局");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar")
                        .HasComment("头像");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthday")
                        .HasComment("生日");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city")
                        .HasComment("市");

                    b.Property<string>("Community")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("community")
                        .HasComment("社区/村");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country")
                        .HasComment("国家");

                    b.Property<int>("CountryCode")
                        .HasColumnType("int")
                        .HasColumnName("country_code")
                        .HasComment("国家代码(默认中国:86)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("bigint")
                        .HasColumnName("department_id")
                        .HasComment("部门id");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("district")
                        .HasComment("区/县");

                    b.Property<int>("Education")
                        .HasColumnType("int")
                        .HasColumnName("education")
                        .HasComment("教育程度(默认0:未知)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email")
                        .HasComment("电子邮箱");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end")
                        .HasComment("停用时间");

                    b.Property<int>("ErrorCount")
                        .HasColumnType("int")
                        .HasColumnName("error_count")
                        .HasComment("错误次数");

                    b.Property<int>("FailedCount")
                        .HasColumnType("int")
                        .HasColumnName("failed_count")
                        .HasComment("登录失败次数");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender")
                        .HasComment("性别(0男,1女,2未知)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id_number")
                        .HasComment("身份证号码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_locked")
                        .HasComment("是否锁定");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_official")
                        .HasComment("是否正式成员");

                    b.Property<string>("JoinIP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("join_ip")
                        .HasComment("加入Ip");

                    b.Property<DateTime>("JoinTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("join_time")
                        .HasComment("加入/激活时间");

                    b.Property<string>("LastIP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_ip")
                        .HasComment("最后登录IP");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login")
                        .HasComment("最后登录时间");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int")
                        .HasColumnName("marital_status")
                        .HasComment("婚姻状况");

                    b.Property<long>("Mobile")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile")
                        .HasComment("移动电话号码");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("姓名");

                    b.Property<int>("Nation")
                        .HasColumnType("int")
                        .HasColumnName("nation")
                        .HasComment("民族(默认0:未知)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nick_name")
                        .HasComment("昵称");

                    b.Property<int>("Party")
                        .HasColumnType("int")
                        .HasColumnName("party")
                        .HasComment("政党(默认0:未知)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone")
                        .HasComment("电话号码");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("province")
                        .HasComment("省");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code")
                        .HasComment("速查码");

                    b.Property<long>("ReferrerId")
                        .HasColumnType("bigint")
                        .HasColumnName("referrer_id")
                        .HasComment("推荐人Id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("salt")
                        .HasComment("盐");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start")
                        .HasComment("启用时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("状态");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("street")
                        .HasComment("街道/乡镇");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("类型");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("外接Id");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name")
                        .HasComment("登录名");

                    b.Property<int>("XppSource")
                        .HasColumnType("int")
                        .HasColumnName("xpp_source")
                        .HasComment("应用来源");

                    b.Property<string>("Zipcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("zipcode")
                        .HasComment("邮编");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("IdNumber");

                    b.HasIndex("Mobile");

                    b.HasIndex("Name");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserName");

                    b.ToTable("member", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.MemberExt", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("open_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Token")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token");

                    b.Property<string>("UnionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("union_id");

                    b.Property<long>("XppSnsId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_sns_id");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TenantId");

                    b.HasIndex("XppSnsId", "OpenId")
                        .IsUnique();

                    b.HasIndex("XppSnsId", "UnionId")
                        .IsUnique();

                    b.ToTable("member_ext", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.MemberSession", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expires");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOfficial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_official");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nick_name");

                    b.Property<string>("OpenId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("open_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("SessionKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("session_key");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token");

                    b.Property<string>("UnionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("union_id");

                    b.Property<long>("XppSnsId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_sns_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("XppSnsId", "MemberId");

                    b.HasIndex("XppSnsId", "Token");

                    b.ToTable("member_session", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Menu", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias")
                        .HasComment("是否叶节点");

                    b.Property<string>("ClientRouter")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("client_router")
                        .HasComment("ClientRouter");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasComment("Code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasComment("描述");

                    b.Property<string>("Ext")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ext")
                        .HasComment("Ext");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon")
                        .HasComment("icon");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index")
                        .HasComment("索引");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_leaf")
                        .HasComment("是否叶节点");

                    b.Property<bool>("IsRoot")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_root")
                        .HasComment("是否根点");

                    b.Property<bool>("IsShow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_show");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level")
                        .HasComment("深度");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasColumnName("lv")
                        .HasComment("左值");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("parent_id")
                        .HasComment("父节点id");

                    b.Property<string>("QuickCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code")
                        .HasComment("QuickCode");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<int>("Rv")
                        .HasColumnType("int")
                        .HasColumnName("rv")
                        .HasComment("右值");

                    b.Property<string>("SelectedIcon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("selected_icon")
                        .HasComment("SelectedIcon");

                    b.Property<string>("SelectedStyle")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("selected_style")
                        .HasComment("SelectedStyle");

                    b.Property<string>("ServerRouter")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("server_router")
                        .HasComment("ServerRouter");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style")
                        .HasComment("Style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasComment("类型");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("value")
                        .HasComment("值");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "XppId");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Operation", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("ClientRouter")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("client_router")
                        .HasComment("ClientRouter");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Descripton")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripton");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsShow")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_show");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint")
                        .HasColumnName("menu_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<string>("ServerRouter")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("server_router")
                        .HasComment("ServerRouter");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("value");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "XppId");

                    b.ToTable("operation", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<string>("Descripton")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripton");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("MenuIds")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("menu_ids");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("OperationIds")
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("operation_ids");

                    b.Property<string>("QuickCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("quick_code");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Style")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.RoleMember", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("creator");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnName("creator_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ReviseTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("revise_time");

                    b.Property<string>("Reviser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reviser");

                    b.Property<long>("ReviserId")
                        .HasColumnType("bigint")
                        .HasColumnName("reviser_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_id");

                    b.Property<long>("XppId")
                        .HasColumnType("bigint")
                        .HasColumnName("xpp_id");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "MemberId", "RoleId", "XppId");

                    b.ToTable("role_member", (string)null);
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Department", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Entities.Department", "Parent")
                        .WithMany("Departments")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Member", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Entities.Department", "Department")
                        .WithMany("Members")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.MemberExt", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Entities.Member", "Member")
                        .WithMany("MemberExts")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Menu", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Entities.Menu", "Parent")
                        .WithMany("Menus")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Operation", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Entities.Menu", "Menu")
                        .WithMany("Operations")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.RoleMember", b =>
                {
                    b.HasOne("iMaxSys.Identity.Data.Entities.Member", "Member")
                        .WithMany("RoleMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("iMaxSys.Identity.Data.Entities.Role", "Role")
                        .WithMany("RoleMembers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Department", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Member", b =>
                {
                    b.Navigation("MemberExts");

                    b.Navigation("RoleMembers");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Menu", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("iMaxSys.Identity.Data.Entities.Role", b =>
                {
                    b.Navigation("RoleMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
